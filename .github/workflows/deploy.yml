# Dit is de naam van de workflow, zichtbaar in de "Actions" tab van GitHub.
name: Deploy to Internal Server (Idiomatic)

on:
  push:
    branches: [ main ]

jobs:
  deploy-python-app:
    name: Deploy Python App
    runs-on: self-hosted

    # Definieer hier de variabelen voor de eenvoud
    env:
      PROJECT_DIR: ${{ secrets.TARGET_DIR }} # bv. /home/ferry/bia_app
      VENV_DIR: /home/ferry/venv/bia_app_venv # Pas aan indien nodig

    steps:
      # Stap 1: Code uitchecken in de workspace van de runner
      - name: Checkout code
        uses: actions/checkout@v4

      # Stap 2: Synchroniseer de nieuwe code naar de live directory
      - name: Sync files to target directory
        run: |
          rsync -av --delete \
            --exclude=".git/" \
            --exclude=".github/" \
            --exclude="__pycache__/" \
            --exclude="*.pyc" \
            --exclude=".env" \
            ./ ${{ env.PROJECT_DIR }}/

      # Stap 3: Installeer/update dependencies in de venv
      # We roepen pip direct aan vanuit de venv, geen 'source' nodig.
      - name: Install dependencies
        run: ${{ env.VENV_DIR }}/bin/pip install -r ${{ env.PROJECT_DIR }}/requirements.txt

      # Stap 4: Voer database migraties uit
      # We gebruiken de 'flask' executable uit de venv.
      - name: Run database migrations
        run: ${{ env.VENV_DIR }}/bin/flask db upgrade
        working-directory: ${{ env.PROJECT_DIR }} # Voer dit commando uit in de projectmap
        env:
          FLASK_APP: run.py

      # Stap 5: Herstart de applicatie service
      # Dit vereist dat de runner-gebruiker sudo-rechten heeft zonder wachtwoord.
      - name: Restart application service
        run: sudo systemctl restart bia
